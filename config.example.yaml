# Cartographoor Service Configuration

# Logging configuration
logging:
  level: info

# Run once and exit
# runOnce: false

# Discovery configuration
discovery:
  # Discovery interval (default: 1h)
  interval: 1h

  # GitHub discovery configuration
  github:
    # List of repositories to check for networks
    repositories:
      # Example with a network name prefix (e.g. "devnet-4" becomes "dencun-devnet-4")
      - name: ethpandaops/eof-devnets
        namePrefix: eof-
        displayName: EOF Devnets
        description: "EOF (EVM Object Format) upgrade devnets, testing new EVM features for contract deployment and execution."
        image: "https://ethpandaops.io/images/eof-logo.png"
        links:
          - title: "EIP-3540: EOF - EVM Object Format v1"
            url: "https://eips.ethereum.org/EIPS/eip-3540"
          - title: "EOF Specification"
            url: "https://notes.ethereum.org/@ipsilon/evm-object-format-overview"

    # GitHub API token (REQUIRED)
    # token: ghp_your_github_token

# S3 storage configuration
storage:
  # S3 bucket name - environment variable example: ${S3_BUCKET_NAME}
  bucketName: ethpandaops-networks

  # S3 key (path) for the networks.json file
  key: networks.json

  # AWS region - environment variable example: ${AWS_REGION}
  region: us-east-1

  # S3-compatible endpoint (optional, for non-AWS S3 implementations)
  # endpoint: https://s3.example.com

  # Access credentials using environment variables
  # accessKey: ${AWS_SECRET_ACCESS_ID}
  # secretKey: ${AWS_SECRET_ACCESS_KEY}

  # Force path style addressing (for some S3-compatible services)
  # forcePathStyle: true

  # Disable SSL (not recommended for production)
  # disableSSL: false

  # Content type for the uploaded file
  contentType: application/json

  # Access control list for the uploaded file (optional)
  # acl: public-read

  # Retry configuration
  retryDuration: 5s
  maxRetries: 3
  backoffJitterPercent: 20

# Validator ranges configuration (optional)
validatorRanges:
  # Additional third-party validator sources
  # 
  # Validator Range Distribution:
  # On testnets, validators are typically distributed across multiple organizations.
  # Each organization may number their validators locally starting from 0, but globally
  # they're assigned specific ranges to avoid conflicts.
  #
  # Example for fusaka-devnet-5:
  #   - ethpandaops:     0-50,912    (owned and operated by ethpandaops)
  #   - Reserved:    50,913-51,311    (400 validators reserved for Prysm, not yet deployed)
  #   - testinprod:  51,312-56,000    (assigned to testinprod/Sunny Side Labs)
  #
  # Since external organizations number their validators locally (e.g., testinprod uses 0-4,688),
  # we need to apply an offset to map their local ranges to the global validator numbering.
  #
  # rangeOffset: The value to add to all validator_start and validator_end values from this source
  #              to map them to their globally assigned range.
  additionalSources:
    fusaka-devnet-5:
      - url: https://raw.githubusercontent.com/testinprod-io/fusaka-devnets/refs/heads/main/ansible/inventories/devnet-5/inventory.ini
        name: testinprod
        rangeOffset: 51312  # Maps testinprod's local 0-4688 to global 51312-56000
